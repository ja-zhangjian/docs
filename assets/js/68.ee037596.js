(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{444:function(_,t,v){"use strict";v.r(t);var s=v(25),o=Object(s.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"收集四-原型和原型链"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#收集四-原型和原型链"}},[_._v("#")]),_._v(" 收集四(原型和原型链)")]),_._v(" "),v("p",[_._v("题目：")]),_._v(" "),v("ol",[v("li",[_._v("如何准确判断一个变量是不是数组？")])]),_._v(" "),v("p",[_._v("a instanceof Array")]),_._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[v("p",[_._v("手写一个简易的 jquery，考虑插件和扩展性")])]),_._v(" "),v("li",[v("p",[_._v("class 的原型本质，怎么理解？")])])]),_._v(" "),v("p",[_._v("原型和原型链的图示")]),_._v(" "),v("p",[_._v("属性和方法的执行规则")]),_._v(" "),v("p",[_._v("知识点：")]),_._v(" "),v("ol",[v("li",[_._v("class 和继承")]),_._v(" "),v("li",[_._v("类型判断 instance of")]),_._v(" "),v("li",[_._v("原型和原型链")])]),_._v(" "),v("p",[_._v("======================================")]),_._v(" "),v("p",[_._v("class：constructor、属性、方法")]),_._v(" "),v("p",[_._v("继承：extends、super、扩展，重写方法")]),_._v(" "),v("p",[_._v("类型判断 instanceof，判断引用类型")]),_._v(" "),v("p",[_._v("每个 class 都有显示原型 prototype")]),_._v(" "),v("p",[_._v("每个实例都有隐式原型__proto__")]),_._v(" "),v("p",[_._v("实例的__proto__指向对应的 class 的 prototype")]),_._v(" "),v("p",[_._v("先在自身属性和方法寻找，找不到就去__proto__中查找")])])}),[],!1,null,null,null);t.default=o.exports}}]);