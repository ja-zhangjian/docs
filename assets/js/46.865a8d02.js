(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{394:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"收集二-ecmascript6-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#收集二-ecmascript6-0"}},[t._v("#")]),t._v(" 收集二 EcmaScript6.0")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("1、proxy")]),t._v(" "),a("p",[t._v("proxy 用于修改某些操作的默认行为")]),t._v(" "),a("p",[t._v("proxy 可以理解为对在目标对象上面设置一层拦截")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("getting ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("setting ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//setting  count")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//getting  count")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//setting  count")]),t._v("\n")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("2、var、let、const 的区别")]),t._v(" "),a("ul",[a("li",[t._v("var 会变量提升 let 和 const 不会")]),t._v(" "),a("li",[t._v("var 在全局命名的变量会挂载到 window 上，let 和 const 不会")]),t._v(" "),a("li",[t._v("let 和 const 有块级作用（暂时性死区），var 没有")]),t._v(" "),a("li",[t._v("let 和 const 不允许重复命名")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("3、class")]),t._v(" "),a("p",[t._v("es6 新增加了 class 方法，但是 class 只是一个语法糖它和我们平时写的构造函数本质上没有区别")]),t._v(" "),a("p",[t._v("静态方法：类相当于实例的原型，所有在类中定义的方法，都会被实例继承。如果在一个方法前，加上 static 关键字，就表示该方法不会被实例继承 ，而是直接通过类来调用，这就成为‘静态方法’")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("4、promise")]),t._v(" "),a("p",[t._v("promise 表示一个异步操作的最终结果，与之交互的方式主要有 then 方法，该方法主要注册了二个回调函数，用于接收 promise 的最终结果和不能执行的原因")]),t._v(" "),a("p",[t._v("promise 的状态主要有三种，等待，执行，拒绝")]),t._v(" "),a("ul",[a("li",[t._v("等待 pending，等待进入执行或拒绝状态")]),t._v(" "),a("li",[t._v("执行 resolve 不能进入其他状态，有一个不可变的最终结果")]),t._v(" "),a("li",[t._v("拒绝 rejected 不能进入其他状态，有一个不可变的拒绝原因")])]),t._v(" "),a("p",[t._v("promise.then(onresolve，onrejected)then 接收两个参数")]),t._v(" "),a("ul",[a("li",[t._v("如果 onresolve、onrejected 不是函数，其必须被省略")])]),t._v(" "),a("p",[t._v("onresolve 特性")]),t._v(" "),a("ul",[a("li",[t._v("promise 执行结束后，其必须被调用，第一个值就是 promise 的结果")]),t._v(" "),a("li",[t._v("promise 结束前不可以被调用")]),t._v(" "),a("li",[t._v("onresolve 调用次数不可以大于一次")])]),t._v(" "),a("p",[t._v("onrejected 特性")]),t._v(" "),a("ul",[a("li",[t._v("promis 被拒绝执行后其必须被调用，其第一个参数为 promise 的拒绝原因")]),t._v(" "),a("li",[t._v("promise 结束前不可以被调用")]),t._v(" "),a("li",[t._v("onrejected 调用次数不可以大于一次")]),t._v(" "),a("li",[t._v("onresolve 和 onrejected 必须被作为函数调用（即没有 this 值）")])]),t._v(" "),a("p",[t._v("多次调用")]),t._v(" "),a("ul",[a("li",[t._v("then 方法可以被同一个 promise 调用多次")]),t._v(" "),a("li",[t._v("当 promis 成功执行时，所有 onresolve 需要按照其注册顺序依次回调")]),t._v(" "),a("li",[t._v("当 promise 被拒绝执行时，所有的 onrejected 需按照其注册顺序依次回调")])]),t._v(" "),a("p",[t._v("返回")]),t._v(" "),a("ul",[a("li",[t._v("then 方法必须返回一个 promise 对象")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("5、使用 es6 实现一个计数器")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("myCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\n")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("6、一句话数组实现找到最大值")]),t._v(" "),a("p",[t._v("Math.max(...arr)")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("7、一句话实现数组去重")]),t._v(" "),a("p",[t._v("new Set(...arr)")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("8、变量的结构赋值")]),t._v(" "),a("p",[t._v("默认值：ES6 内部使用严格相等运算符（===），判断一个位置是否有值，所以，只有当一个数组成员严格等于 undefined，默认值才会生效")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("9、字符串的遍历器接口")]),t._v(" "),a("p",[t._v("ES6 为字符串添加了遍历器接口，使得字符串可以被 for...fo 循环 遍历")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("10、includes，startsWith，endsWith")]),t._v(" "),a("p",[t._v("传统的 js 中只提供了 indexOf()查找匹配对应的字符串")]),t._v(" "),a("p",[t._v("es6 中提供了三种方法")]),t._v(" "),a("p",[t._v("includes()返回布尔值，表示是否找到了参数字符串")]),t._v(" "),a("p",[t._v("startsWith()返回布尔值，标书参数字符串是否在原字符串的头部")]),t._v(" "),a("p",[t._v("endsWith()返回布尔值，表示参数字符串是否在原字符串的尾部")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("11、字符串模板")]),t._v(" "),a("p",[t._v("consol.log(\\ "),a("code",[t._v("字符串\\${foo}模板")]),t._v(" )")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("12、Number.isFinite, Number.isNaN")]),t._v(" "),a("p",[t._v("ES6 在 Number 对象上，新提供了 Number.isFinite, Number.isNaN 方法")]),t._v(" "),a("p",[t._v("Number.isFinite()用来检查一个数值是否为有限的（finite），即不是 Infinity")]),t._v(" "),a("p",[t._v("Number.isNaN()用来检查一个值是否为 NaN")]),t._v(" "),a("p",[t._v("他们与传统的全局方法 isFinite()和 isNaN()的区别在于，传统方法先调用 Number 将非数值的值转为数值，再进行判断，而这两个新方法只对数值有效，Number.isFinite()对于非数值一律返回 false，Number.isNaN()只有对于 NaN 才返回 true，非 NaN 一律返回 false")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("13、Number.isInteger")]),t._v(" "),a("p",[t._v("用来判断一个数值是否为整数")]),t._v(" "),a("p",[t._v("Number.isInteger(25.0)//true")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("14、Math.trunc")]),t._v(" "),a("p",[t._v("用于去除一个数的小数部分，返回整数部分")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("15、Math.sign")]),t._v(" "),a("p",[t._v("判断一个数到底是正数、负数、还是零。对于非数值，会先将其转换为数值。返回（+1、-1、+0、-0、NaN）")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("16、函数的默认传参")]),t._v(" "),a("p",[t._v("es6 允许函数的参数为默认值，即直接写在参数定义的后面")]),t._v(" "),a("p",[t._v("function func(num=12){}")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("17、rest 参数")]),t._v(" "),a("p",[t._v("rest 参数（形式为... 变量名），用于获取函数的多余参数，这样就不需要使用 arguments 对象了。rest 参数搭配的变量是一个数组，该变量将多余的参数放入数组中")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("18、扩展运算符")]),t._v(" "),a("p",[t._v("扩展运算符是三个点（...），它好比rest参数的逆运算，将一个数组转为用逗号分隔的参数序列")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("19、Array.from")]),t._v(" "),a("p",[t._v("用于将对象转为真正的数组")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("20、find 和 findIndex")]),t._v(" "),a("p",[t._v("数组的实例的find方法，用于找出第一个符合条件的数组成员，它的参数是一个回调函数，所有数组成员依次执行该回调函数，直到找出第一个返回值为true的成员，然后返回该成员，如果没有找到符合条件的成员，则返回undefined。")]),t._v(" "),a("p",[t._v("数组实例的findIndex方法，返回第一个符合条件的数组成员的位置，如果所有的成员都不符合条件，则返回-1")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("21、数组拍平")]),t._v(" "),a("p",[t._v("数组拍平就是将多维数组转为一维数组")]),t._v(" "),a("p",[t._v("[1, [2, [3]]].flat(Infinity)")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("22、数组实例的 flat 和 flatMap")]),t._v(" "),a("p",[t._v("数组的成员有时还是数组，Array.prototype.flat()用于将嵌套的数组拉平，变成一维的数组，该方法返回一个新的数组，对原数据没有影响")]),t._v(" "),a("p",[t._v("flatMap方法对原数组的每一个成员都执行一个函数，相当于Array.prototype.map()，然后对返回值组成的数组执行flat（）方法。该方法返回一个新的数组，不改变原数组")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("23、Object.is")]),t._v(" "),a("p",[t._v("ES5比较两个值是否相等")]),t._v(" "),a("p",[t._v("相等运算符==和严格相等运算符。他们都有缺点，前者会自动转换数据类型，后者的NaN不等于自身，以及+0等于-0. JS缺乏一种运算，在所有环境中，只要两个值是一样的，他们就应该相等")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("24、Object.assign")]),t._v(" "),a("p",[t._v("用于对象的合并，将源对象的所有可枚举属性，复制到目标对象")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("25、symbol")]),t._v(" "),a("p",[t._v("ES6引入了一种新的原始数据类型Symbol，表示独一无二的值，他是js语言的第七种数据类型，前六种是undefined、null，Boolean、string、number、object")]),t._v(" "),a("p",[t._v("symbol值通过symbol函数产生，这就是说，对象的属性名系现在可以有两种类型，一种是原来就有的字符串，另一种就是新增的symbol类型，凡是属性名属于symbol类型，就都是独一无二的，可以保证不会与其他属性名产生冲突")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("26、symbol 中内置方法")]),t._v(" "),a("p",[t._v("symbol.toPrimitive对象的symbol.toPrimitive属性，指向一个方法，该对象被转为原始类型的值时，会调用这个方法，返回该对象对应的原始类型值。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("27、Object.entries")]),t._v(" "),a("p",[t._v("Object.entries以数组方式返回keys和values")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("28、padStart&padEnd")]),t._v(" "),a("p",[t._v("字符串填充")]),t._v(" "),a("p",[t._v("let str  =10；")]),t._v(" "),a("p",[t._v("str.padStart(3，'0')=>010")]),t._v(" "),a("p",[t._v("str.padEnd(5，'-')=>10---")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("29、set&map 数据结构")]),t._v(" "),a("p",[t._v("set，成员的值都是唯一的，没有重复的值")]),t._v(" "),a("p",[t._v("map，键值对的集合，但是键的范围不限于字符串，各种类型的值（包括对象）都可以当作键，也就是说，Object结构提供了‘字符串-值’的对应，Map结构提供了‘值-值’的对应，是一种更加完善的Hash结构的实现，如果你需要键值对的数据结构，map比object更合适")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("30、reflect")]),t._v(" "),a("p",[t._v("es6操作对象的api，（这不是废话吗，写的啥啊？？？）")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("31、for...of 循环")]),t._v(" "),a("p",[t._v("作为遍历所有的数据结构的统一的方法")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("32、Generator")]),t._v(" "),a("p",[t._v("生成器，异步编程")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leti "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" i\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nleft fn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\nfn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\nfn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("33、async")]),t._v(" "),a("p",[t._v("promise函数的语法糖")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("34、Module")]),t._v(" "),a("p",[t._v("模块的方式")]),t._v(" "),a("p",[t._v("export和import")]),t._v(" "),a("p",[t._v("es6模块与commonjs模块的差异")]),t._v(" "),a("ul",[a("li",[t._v("commonjs模块输出的是一个值得拷贝，es6模块输出的是值得引用")]),t._v(" "),a("li",[t._v("commonjs模块是运行时加载，es6模块是编译时输出接口，静态分析")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("35、循环加载（阿里面试题 2018/12）")]),t._v(" "),a("p",[t._v("搞不定，题目我就犯晕")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("36、es5 的继承和 es6 的继承有什么区别")]),t._v(" "),a("p",[t._v("底层实现还是通过原型链之间的委托关联关系实现继承")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("37、es6 中的 class")]),t._v(" "),a("ul",[a("li",[t._v("首先class创建的类是会提升的，但是不会赋值，class创建的类首先会进入暂时性锁死，类似let、const（提升指TDZ class创建的类会无视块级作用域屏蔽外部同名变量）")]),t._v(" "),a("li",[t._v("class声明内部会启用严格模式")]),t._v(" "),a("li",[t._v("class的所有方法（包括静态方法和实例方法）都是不可枚举的")]),t._v(" "),a("li",[t._v("class的所有方法都是没有原型对象prototype，所以也没有construct，不能使用new来调用")]),t._v(" "),a("li",[t._v("必须使用new调用class")]),t._v(" "),a("li",[t._v("class内部无法重写类名")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("38、let、const 声明的变量在哪？")]),t._v(" "),a("p",[t._v("let const声明的变量在一个块级作用域script中")])])])}),[],!1,null,null,null);s.default=e.exports}}]);