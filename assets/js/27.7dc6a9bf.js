(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{393:function(t,s,a){"use strict";a.r(s);var _=a(25),e=Object(_.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git基础入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git基础入门"}},[t._v("#")]),t._v(" git基础入门")]),t._v(" "),a("blockquote",[a("p",[t._v("Git是一款免费、开源的"),a("strong",[t._v("分布式")]),t._v(" "),a("strong",[t._v("版本控制系统")]),t._v(" ，用于敏捷高效地处理任何或小或大的项目。")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/工具/git/reset.gif")}}),t._v(" "),a("h2",{attrs:{id:"_1-1-git的安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-git的安装"}},[t._v("#")]),t._v(" 1.1 git的安装")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://git-scm.com/download/win",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载地址"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("注意：")]),t._v(" "),a("ol",[a("li",[t._v("不要安装在中文目录")]),t._v(" "),a("li",[t._v("不要使用桌面管理软件")])]),t._v(" "),a("p",[t._v("安装很简单，一直下一步即可。在任意的目录下右键，能看到菜单, 就表示安装成功了。")]),t._v(" "),a("p",[t._v("github账号注册")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("github官网"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"_1-2-git三个区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-git三个区"}},[t._v("#")]),t._v(" 1.2 git三个区")]),t._v(" "),a("p",[t._v("要对某个项目使用git进行管理，需要使用"),a("code",[t._v("git init")]),t._v("命令初始化git仓库\n"),a("code",[t._v("git init")]),t._v("会在当前目录生成一个隐藏文件夹 .git  不要去修改这个文件夹下的任意东西。")]),t._v(" "),a("p",[t._v("git仓库会分成三个区")]),t._v(" "),a("p",[t._v("工作区：我们书写代码的地方，工作的目录就叫工作区。")]),t._v(" "),a("p",[t._v("暂存区：暂时存储的区域，在git中，代码无法直接从工作区提交到仓库区，而是需要先从工作区添加到暂存区，然后才能从暂存区提交到仓库区。暂存区的目的是避免误操作。")]),t._v(" "),a("p",[t._v("仓库区：将保存在暂存区域的内容永久转储到 Git 仓库中，生成版本号。生成版本号之后，就可以任何的回退到某一个具体的版本。")]),t._v(" "),a("h2",{attrs:{id:"_1-3-git基本命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-git基本命令"}},[t._v("#")]),t._v(" 1.3 git基本命令")]),t._v(" "),a("h3",{attrs:{id:"git-init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-init"}},[t._v("#")]),t._v(" git init")]),t._v(" "),a("ul",[a("li",[t._v("作用：初始化git仓库，想要使用git对某个项目进行管理，需要"),a("code",[t._v("git init")]),t._v("进行初始化")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化仓库， 在当前目录下生成一个隐藏文件夹.git")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])])]),a("h3",{attrs:{id:"git-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-add"}},[t._v("#")]),t._v(" git add")]),t._v(" "),a("ul",[a("li",[t._v("作用：将文件由 "),a("code",[t._v("工作区")]),t._v(" 添加到 "),a("code",[t._v("暂存区")]),t._v("，在git中，文件无法直接从工作区直接添加到仓库区，必须先从工作区添加到暂存区，再从暂存区添加到仓库区。")]),t._v(" "),a("li",[t._v("命令："),a("code",[t._v("git add 文件名/目录名")])])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将index.html添加到暂存区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" index.html\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将css目录下所有的文件添加到暂存区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" css\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加当前目录下所有的文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --all\n")])])]),a("h3",{attrs:{id:"git-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[t._v("#")]),t._v(" git commit")]),t._v(" "),a("p",[t._v("作用：将文件由 暂存区 添加到 仓库区，生成版本号（存档）")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将文件从暂存区提交到仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"提交说明"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果不写提交说明，会进入vi编辑器，没有写提交说明，是提交不成功的。 :q!来退出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 需要使用vi输入内容  vi编辑器常用操作")]),t._v("\n")])])]),a("h3",{attrs:{id:"git-config配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-config配置"}},[t._v("#")]),t._v(" git config配置")]),t._v(" "),a("p",[t._v("如果是第一次提交，需要配置提交者信息，推荐和github的账号邮箱一致")]),t._v(" "),a("div",{staticClass:"language-Bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git config  user.name 你的目标用户名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git config  user.email 你的目标邮箱名")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用--global参数，配置全局的用户名和邮箱，只需要配置一次即可。推荐配置github的用户名和密码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config  --global user.name  皮皮虾\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config  --global user.email "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2641543334")]),t._v("@qq.com\n")])])]),a("p",[t._v("如果是之前已经配置了，想清空的话，可以使用如下命令：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("git config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" \ngit config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n")])])]),a("h3",{attrs:{id:"git-status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-status"}},[t._v("#")]),t._v(" git status")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("作用：查看文件的状态")])]),t._v(" "),a("li",[a("p",[t._v("命令："),a("code",[t._v("git status")])]),t._v(" "),a("ul",[a("li",[t._v("红色表示工作区中的文件需要提交")]),t._v(" "),a("li",[t._v("绿色表示暂存区中的文件需要提交")])])])]),t._v(" "),a("h3",{attrs:{id:"git-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" git log")]),t._v(" "),a("ul",[a("li",[t._v("作用：查看提交日志")]),t._v(" "),a("li",[a("code",[t._v("git log")]),t._v(" 查看提交的日志")]),t._v(" "),a("li",[a("code",[t._v("git log --oneline")]),t._v(" 简洁的日志信息")]),t._v(" "),a("li",[a("code",[t._v("git reflog")]),t._v(" 查看所有的版本信息 ，包括回退的操作")])]),t._v(" "),a("h2",{attrs:{id:"_1-4-git重置或版本回退"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-git重置或版本回退"}},[t._v("#")]),t._v(" 1.4 git重置或版本回退")]),t._v(" "),a("h3",{attrs:{id:"git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("作用：版本回退，将代码恢复到已经提交的某一个版本中。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git reset --hard 版本号")]),t._v(" 将代码回退到某个指定的版本(版本号只要有前几位即可)")])]),t._v(" "),a("li",[a("p",[t._v("当使用了"),a("code",[t._v("git reset")]),t._v("命令后，版本会回退，使用"),a("code",[t._v("git log")]),t._v("只能看到"),a("strong",[t._v("当前版本")]),t._v("之前的信息。使用"),a("code",[t._v("git reflog")]),t._v("可以查看所有的版本信息")])])]),t._v(" "),a("h2",{attrs:{id:"_1-5-git忽视文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-git忽视文件"}},[t._v("#")]),t._v(" 1.5 git忽视文件")]),t._v(" "),a("blockquote",[a("p",[t._v("在仓库中，有些文件是不想被git管理的，比如数据的配置密码、写代码的一些思路，node_modules等。git可以通过配置从而达到忽视掉一些文件，这样这些文件就可以不用提交了。")])]),t._v(" "),a("ul",[a("li",[t._v("在仓库的根目录创建一个"),a("code",[t._v(".gitignore")]),t._v("的文件，文件名是固定的。")]),t._v(" "),a("li",[t._v("将不需要被git管理的文件路径添加到"),a("code",[t._v(".gitignore")]),t._v("中")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽视idea.txt文件")]),t._v("\nidea.txt\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽视css下的index.js文件")]),t._v("\ncss/index.js\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽视css下的所有的js文件")]),t._v("\ncss/*.js\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽视css文件夹")]),t._v("\ncss\n")])])]),a("h1",{attrs:{id:"_2-git分支操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-git分支操作"}},[t._v("#")]),t._v(" 2. git分支操作")]),t._v(" "),a("p",[t._v("分支就是科幻电影里面的平行宇宙，当你正在电脑前努力学习Git的时候，另一个你正在另一个平行宇宙里努力学习SVN。")]),t._v(" "),a("p",[t._v("如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，结果，你既学会了Git又学会了SVN！")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/工具/git/fenzhi.png")}}),t._v(" "),a("h2",{attrs:{id:"_2-1-为什么要有分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-为什么要有分支"}},[t._v("#")]),t._v(" 2.1 为什么要有分支？")]),t._v(" "),a("ul",[a("li",[t._v("如果你要开发一个新的功能，需要2周时间，第一周你只能写50%代码，如果此时立即提交，代码没写完，不完整的代码会影响到别人无法工作。如果等代码写完再提交，代码很容易丢失，风险很大。")]),t._v(" "),a("li",[t._v("有了分支，你就可以创建一个属于自己的分支，别人看不到，也不影响别人，你在自己的分支上工作，提交到自己的分支上，等到功能开发完毕，一次性的合并到原来的分支。这样既安全，又不影响他人工作。")])]),t._v(" "),a("h2",{attrs:{id:"_2-2-git分支命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-git分支命令"}},[t._v("#")]),t._v(" 2.2 git分支命令")]),t._v(" "),a("blockquote",[a("p",[t._v("在git中，分支实质上仅仅是一个指针，每次代码提交后，这个分支指针就会向后移动，保证一直指向最后一次提交的的版本。git中使用HEAD指向当前分支")])]),t._v(" "),a("h3",{attrs:{id:"创建分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[t._v("#")]),t._v(" 创建分支")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git branch 分支名称")]),t._v("创建分支，分支中的代码，在创建时与当前分支的内容完全相同。")]),t._v(" "),a("li",[t._v("git在第一次提交时，就有了一个叫"),a("code",[t._v("master")]),t._v("的主分支。")]),t._v(" "),a("li",[a("code",[t._v("git branch dev")]),t._v("，创建了一个叫做dev的分支")])]),t._v(" "),a("h3",{attrs:{id:"查看分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看分支"}},[t._v("#")]),t._v(" 查看分支")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git branch")]),t._v("可以查看所有的分支")]),t._v(" "),a("li",[t._v("在当前分支的前面会有一个"),a("code",[t._v("*")])]),t._v(" "),a("li",[t._v("在git中，有一个特殊指针"),a("code",[t._v("HEAD")]),t._v(",永远会指向当前分支")])]),t._v(" "),a("h3",{attrs:{id:"切换分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[t._v("#")]),t._v(" 切换分支")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git checkout 分支名称")]),t._v("切换分支  HEAD指针指向了另一个分支")]),t._v(" "),a("li",[t._v("在当前分支的任何操作，都不会影响到其他的分支，除非进行了分支合并。")]),t._v(" "),a("li",[t._v("提交代码时，会生产版本号，当前分支会指向最新的版本号。")])]),t._v(" "),a("h3",{attrs:{id:"创建并切换分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建并切换分支"}},[t._v("#")]),t._v(" 创建并切换分支")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git checkout -b 分支名称")]),t._v(" 创建并切换分支")]),t._v(" "),a("li",[t._v("切换分支会做两件事情\n"),a("ul",[a("li",[t._v("创建一个新分支")]),t._v(" "),a("li",[t._v("把head指针指向当前的分支")])])])]),t._v(" "),a("h3",{attrs:{id:"删除分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git branch -d 分支名称")]),t._v(" 可以删除分支")]),t._v(" "),a("li",[t._v("注意：不能在当前分支删除当前分支，需要切换到其他分支才能删除。")]),t._v(" "),a("li",[t._v("注意："),a("code",[t._v("master")]),t._v("分支是可以删除的，但是不推荐那么做。")])]),t._v(" "),a("h3",{attrs:{id:"合并分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[t._v("#")]),t._v(" 合并分支")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git merge 分支名称")]),t._v(" 将其他分支的内容合并到当前分支。")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("master")]),t._v("分支中执行"),a("code",[t._v("git merge dev")]),t._v(" 将"),a("code",[t._v("dev")]),t._v("分支中的代码合并到"),a("code",[t._v("master")]),t._v("分支")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://git-scm.com/book/zh/v1/Git-%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E7%9A%84%E6%96%B0%E5%BB%BA%E4%B8%8E%E5%90%88%E5%B9%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v("分支合并"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_2-3-git合并冲突"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-git合并冲突"}},[t._v("#")]),t._v(" 2.3 git合并冲突")]),t._v(" "),a("ul",[a("li",[t._v("对于同一个文件，如果有多个分支需要合并时，容易出现冲突。")]),t._v(" "),a("li",[t._v("合并分支时，如果出现冲突，只能手动处理，再次提交，一般的作法，把自己的代码放到冲突代码的后面即可。")])]),t._v(" "),a("h1",{attrs:{id:"_3-git远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-git远程仓库"}},[t._v("#")]),t._v(" 3. git远程仓库")]),t._v(" "),a("h2",{attrs:{id:"_3-1-github与git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-github与git"}},[t._v("#")]),t._v(" 3.1 github与git")]),t._v(" "),a("p",[t._v("git与github没有直接的关系。")]),t._v(" "),a("ul",[a("li",[t._v("git是一个版本控制工具。")]),t._v(" "),a("li",[t._v("github是一个代码托管平台，开源社区，是git的一个远程代码仓库。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1. gitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2. github免费，代码所有人都能看到，但是只有你自己能修改。付费的可以隐藏。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3. 创建git项目时，不能有中文。")]),t._v("\n")])])]),a("p",[a("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("github官网"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://git.oschina.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("开源中国-git"),a("OutboundLink")],1)]),t._v(" "),a("img",{attrs:{src:t.$withBase("/工具/git/image-20200722113838573.png")}}),t._v(" "),a("h2",{attrs:{id:"_3-2-git-clone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-git-clone"}},[t._v("#")]),t._v(" 3.2 git clone")]),t._v(" "),a("ul",[a("li",[t._v("作用：克隆远程仓库的代码到本地")]),t._v(" "),a("li",[t._v("git clone [远程仓库地址]")]),t._v(" "),a("li",[a("code",[t._v("git clone https://github.com/itcastAAA666/myCode68.git")]),t._v("会在本地新建一个"),a("code",[t._v("test")]),t._v("文件夹，在test中包含了一个"),a("code",[t._v(".git")]),t._v("目录，用于保存所有的版本记录，同时test文件中还有最新的代码，你可以直接进行后续的开发和使用。")]),t._v(" "),a("li",[t._v("git克隆默认会使用远程仓库的项目名字，也可以自己指定。需要是使用以下命令："),a("code",[t._v("git clone [远程仓库地址] [本地项目名]")])])]),t._v(" "),a("h2",{attrs:{id:"_3-3-git-push"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-git-push"}},[t._v("#")]),t._v(" 3.3 git push")]),t._v(" "),a("ul",[a("li",[t._v("作用：将本地仓库中代码提交到远程仓库")]),t._v(" "),a("li",[a("code",[t._v("git push 仓库地址 master")]),t._v(" 在代码提交到远程仓库，注意master分支必须写，不能省略")]),t._v(" "),a("li",[t._v("例子："),a("code",[t._v("git push git@github.com:itcastAAA666/test.git master")]),t._v(" 如果第一次使用，需要填写github的用户名和密码")])]),t._v(" "),a("h2",{attrs:{id:"_3-4-git-pull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-git-pull"}},[t._v("#")]),t._v(" 3.4 git pull")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("作用：将远程的代码下载到本地")])]),t._v(" "),a("li",[a("p",[t._v("通常在push前，需要先pull一次。")])])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取远程仓库的更新，并且与本地的分支进行合并")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n")])])]),a("h2",{attrs:{id:"_3-5-ssh免密码登陆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-ssh免密码登陆"}},[t._v("#")]),t._v(" 3.5 SSH免密码登陆")]),t._v(" "),a("p",[t._v("git支持多种数据传输协议：")]),t._v(" "),a("ul",[a("li",[t._v("https协议："),a("code",[t._v("https://github.com/你的注册名/test.git")]),t._v("  需要输入用户名和密码")]),t._v(" "),a("li",[t._v("ssh协议："),a("code",[t._v("git@github.com:你的注册名/test.git")]),t._v("   可以配置免密码登录")])]),t._v(" "),a("p",[t._v("每次push或者pull代码，如果使用https协议，那么都需要输入用户名和密码进行身份的确认，非常麻烦。")]),t._v(" "),a("ul",[a("li",[t._v("github为了账户的安全，需要对每一次push请求都要验证用户的身份，只有合法的用户才可以push")]),t._v(" "),a("li",[t._v("使用ssh协议，配置ssh免密码，可以做到免密码往github推送代码")])]),t._v(" "),a("h2",{attrs:{id:"_3-6-ssh免密码登录配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-ssh免密码登录配置"}},[t._v("#")]),t._v(" 3.6 SSH免密码登录配置")]),t._v(" "),a("p",[t._v("注意：这些命令需要在bash中敲")]),t._v(" "),a("ul",[a("li",[t._v("1 创建SSH Key："),a("code",[t._v("ssh-keygen -t rsa")]),t._v(" "),a("ul",[a("li",[t._v("key 钥匙的意思")]),t._v(" "),a("li",[t._v("gen-- generate 生成，产生的意思")])])]),t._v(" "),a("li",[t._v("2 在文件路径 "),a("code",[t._v("C:\\用户\\当前用户名\\")]),t._v(" 找到 "),a("code",[t._v(".ssh")]),t._v(" 文件夹")]),t._v(" "),a("li",[t._v("3 文件夹中有两个文件：\n"),a("ul",[a("li",[t._v("私钥："),a("code",[t._v("id_rsa")])]),t._v(" "),a("li",[t._v("公钥："),a("code",[t._v("id_rsa.pub")]),t._v("   将公钥添加到github当中")])])]),t._v(" "),a("li",[t._v("4 在 "),a("code",[t._v("github -> settings -> SSH and GPG keys")]),t._v("页面中，新创建SSH key")]),t._v(" "),a("li",[t._v("5 粘贴 公钥 "),a("code",[t._v("id_rsa.pub")]),t._v(" 内容到对应文本框中")]),t._v(" "),a("li",[t._v("5 在github中新建仓库或者使用现在仓库，拿到"),a("code",[t._v("git@github.com:用户名/仓库名.git")])]),t._v(" "),a("li",[t._v("6 此后，再次SSH方式与github“通信”，不用输入密码确认身份了")])]),t._v(" "),a("h2",{attrs:{id:"_3-7-git-remote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-git-remote"}},[t._v("#")]),t._v(" 3.7 git remote")]),t._v(" "),a("p",[t._v("每次push操作都需要带上远程仓库的地址，非常的麻烦，我们可以给仓库地址设置一个别名")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 给远程仓库设置一个别名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" 仓库别名 仓库地址\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" pinyougou git@github.com:你的注册名/test.git\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用如下来推送数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push pinyougou master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除PPXCode这个别名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote remove pinyougou\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);