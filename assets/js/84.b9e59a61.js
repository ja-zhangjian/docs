(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{436:function(t,s,v){"use strict";v.r(s);var c=v(25),i=Object(c.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"收集二"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#收集二"}},[t._v("#")]),t._v(" 收集二")]),t._v(" "),v("h2",{attrs:{id:"上海海康威视"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#上海海康威视"}},[t._v("#")]),t._v(" 上海海康威视")]),t._v(" "),v("p",[t._v("预")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("1. 简述四次分手")]),t._v(" "),v("p",[t._v("关于TCP三次握手四次分手，之前看资料解释的都很笼统，很多地方都不是很明白，所以很难记，前几天看的一个博客豁然开朗，可惜现在找不到了。现在把之前的疑惑总结起来，方便一下大家。")]),t._v(" "),v("p",[t._v("先上个TCP三次握手和四次分手的图")]),t._v(" "),v("p",[t._v("网上好多都是错的，只能自己画了，一个正确的图的确可以方便理解。\n"),v("img",{attrs:{src:t.$withBase("/面试/三次握手.jpg")}})]),t._v(" "),v("img",{attrs:{src:t.$withBase("/面试/四次分手.jpg")}}),t._v(" "),v("p",[t._v("疑问一，上图传递过程中出现的几个字符（SYN, ACK, FIN, seq, ack）各代表什么意思")]),t._v(" "),v("p",[t._v("SYN，ACK，FIN存放在TCP的标志位，一共有6个字符，这里就介绍这三个：")]),t._v(" "),v("p",[t._v("SYN：代表请求创建连接，所以在三次握手中前两次要SYN=1，表示这两次用于建立连接，至于第三次什么用，在疑问三里解答。")]),t._v(" "),v("p",[t._v("FIN：表示请求关闭连接，在四次分手时，我们发现FIN发了两遍。这是因为TCP的连接是双向的，所以一次FIN只能关闭一个方向。")]),t._v(" "),v("p",[t._v("ACK：代表确认接受，从上面可以发现，不管是三次握手还是四次分手，在回应的时候都会加上ACK=1，表示消息接收到了，并且在建立连接以后的发送数据时，都需加上ACK=1, 来表示数据接收成功。")]),t._v(" "),v("p",[t._v("seq: 序列号，什么意思呢？当发送一个数据时，数据是被拆成多个数据包来发送，序列号就是对每个数据包进行编号，这样接受方才能对数据包进行再次拼接。")]),t._v(" "),v("p",[t._v("初始序列号是随机生成的，这样不一样的数据拆包解包就不会连接错了。（例如：两个数据都被拆成1，2，3和一个数据是1，2，3一个是101，102，103，很明显后者不会连接错误）")]),t._v(" "),v("p",[t._v("ack: 这个代表下一个数据包的编号，这也就是为什么第二请求时，ack是seq+1，")]),t._v(" "),v("p",[t._v("(这里要吐槽一下，当初不懂的时候查资料，发现好多地方把ACK和ack都搞混了，害的我被坑了好久...)")]),t._v(" "),v("p",[t._v("如果你仔细看了上面对每个字符的解释，那么相信我画的三次握手和四次分手的图你也就明白了。")]),t._v(" "),v("p",[t._v("再复习一遍")]),t._v(" "),v("p",[t._v("在创建连接时，")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("客户端首先要SYN=1, 表示要创建连接，")])]),t._v(" "),v("li",[v("p",[t._v("服务端接收到后，要告诉客户端：我接受到了！所以加个ACK=1，就变成了ACK=1, SYN=1")])]),t._v(" "),v("li",[v("p",[t._v("理论上这时就创建连接成功了，但是要防止一个意外（见疑问三），所以客户端要再发一个消息给服务端确认一下，这时只需要ACK=1就行了。")])])]),t._v(" "),v("p",[t._v("三次握手完成！")]),t._v(" "),v("p",[t._v("在四次分手时，")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("首先客户端请求关闭客户端到服务端方向的连接，这时客户端就要发送一个FIN=1，表示要关闭一个方向的连接（见上面四次分手的图）")])]),t._v(" "),v("li",[v("p",[t._v("服务端接收到后是需要确认一下的，所以返回了一个ACK=1")])]),t._v(" "),v("li",[v("p",[t._v("这时只关闭了一个方向，另一个方向也需要关闭，所以服务端也向客户端发了一个FIN=1 ACK=1")])]),t._v(" "),v("li",[v("p",[t._v("客户端接收到后发送ACK=1，表示接受成功")])])]),t._v(" "),v("p",[t._v("四次分手完成！")]),t._v(" "),v("p",[t._v("我为什么没有在上面的过程中，加入seq和ack呢？就如我对这两个关键字的解释的一样，这两个是数据拆分和组装必备元素，所以所有的请求都需要这两个元素，只要明白了作用，就可以自己举一反三。")]),t._v(" "),v("p",[t._v("关于握手和分手，主要还是SYN, FIN, ACK的变化，这才是重点！")]),t._v(" "),v("p",[t._v("疑问二，每次发送请求时为什么ack要+1")]),t._v(" "),v("p",[t._v("关于seq和ack关键字的解释中已经说明了。")]),t._v(" "),v("p",[t._v("疑问三，为什么需要三次握手")]),t._v(" "),v("p",[t._v("下面解释明明两次就可以建立连接的为什么还要加第三次的确认。")]),t._v(" "),v("p",[t._v("如果发送两次就可以建立连接话，那么只要客户端发送一个连接请求，服务端接收到并发送了确认，就会建立一个连接。")]),t._v(" "),v("p",[t._v("可能出现的问题：如果一个连接请求在网络中跑的慢，超时了，这时客户端会从发请求，但是这个跑的慢的请求最后还是跑到了，然后服务端就接收了两个连接请求，然后全部回应就会创建两个连接，浪费资源！")]),t._v(" "),v("p",[t._v("如果加了第三次客户端确认，客户端在接受到一个服务端连接确认请求后，后面再接收到的连接确认请求就可以抛弃不管了。")]),t._v(" "),v("p",[t._v("疑问四，为什么需要四次分手")]),t._v(" "),v("p",[t._v("TCP是双向的，所以需要在两个方向分别关闭，每个方向的关闭又需要请求和确认，所以一共就4次")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("02. 简述网络编程")]),t._v(" "),v("p",[t._v("ISO/OSI七层模型")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("03. 队列和堆栈的区别")]),t._v(" "),v("p",[t._v("队列，对头队尾")]),t._v(" "),v("p",[t._v("堆栈，先进后出")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("04. 进程间的通信方式")]),t._v(" "),v("p",[t._v("ipc")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("05. axios的拦截器原理及应用")]),t._v(" "),v("p",[t._v("请求和响应拦截，判断token等等")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("06. 路由守卫进行判断登录")]),t._v(" "),v("p",[t._v("beforeEnter")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("07. webpack的打包流程")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("08. vue-router懒加载")]),t._v(" "),v("p",[t._v("()=>import")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("09. js实现数组数字的快速排序方法")]),t._v(" "),v("p",[t._v("sort")]),t._v(" "),v("p",[t._v("递归快排")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("10. Promise的状态，三种pending fulfilled rejected")]),t._v(" "),v("p",[t._v("？？？")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("11. Promise 的理解")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("12. 箭头函数和普通函数的区别")]),t._v(" "),v("p",[t._v("this指向问题")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("13. ES6新特性")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("14. Var let const 的区别")]),t._v(" "),v("p",[t._v("作用域")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("15. 实现继承的几种方式")]),t._v(" "),v("p",[t._v("原型继承")]),t._v(" "),v("p",[t._v("寄生组合继承")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("16. Null 和 undefined 的区别")]),t._v(" "),v("p",[t._v("null 空对象")]),t._v(" "),v("p",[t._v("undefined声明，未赋值")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("17. Call bind apply的区别")]),t._v(" "),v("p",[t._v("call，this，参数一个个")]),t._v(" "),v("p",[t._v("appl 参数一起")]),t._v(" "),v("p",[t._v("bind 返回一个方法")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("18. 前端缓存的理解 或者 前端数据持久化的理解")]),t._v(" "),v("p",[t._v("强缓存、协商缓存")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("19. 防抖和节流")]),t._v(" "),v("p",[t._v("定时器")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("20. 闭包")]),t._v(" "),v("p",[t._v("内部获取外部参数")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("21. 数组去重")]),t._v(" "),v("p",[t._v("set，...")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("22. 深浅拷贝")]),t._v(" "),v("p",[t._v("拷贝地址")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("23. 原型链")]),t._v(" "),v("p",[t._v("原型三角链")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("24. Require 和 import")]),t._v(" "),v("p",[t._v("commonjs，es6模块化")])]),t._v(" "),v("p",[t._v("CSS")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("01. 常见的块级元素和行内块元素，以及它们有何不同")]),t._v(" "),v("p",[t._v("块级元素：p，h，div，from，table，ul")]),t._v(" "),v("p",[t._v("行内块元素：a，img，span，textarea，input")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("02. 常见选择器")]),t._v(" "),v("p",[t._v("id，class，标签，queryselect")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("03. px em 和 rem的区别")]),t._v(" "),v("p",[t._v("px：绝对单位，em相对单位（父），rem：root-em，fontsize")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("04. 水平垂直居中的几种方法")]),t._v(" "),v("p",[t._v("flex，父相子绝")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("05. 盒模型的理解")]),t._v(" "),v("p",[t._v("box-size, 标准盒模型，边框，内边距，内容")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("06. Flex布局")]),t._v(" "),v("p",[t._v("display：flex；flex：1")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("07. 怎么解决浮动中塌陷的问题")]),t._v(" "),v("p",[t._v("清除浮动")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("08. CSS3新特性")]),t._v(" "),v("p",[t._v("canvas")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("09. 前端常见的布局方式")]),t._v(" "),v("p",[t._v("双飞翼")])]),t._v(" "),v("p",[t._v("HTML")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("01. HTML的语义化标签")]),t._v(" "),v("p",[t._v("seo，机器和人都能读懂")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("02. 前端优化的解决方案")]),t._v(" "),v("p",[t._v("太笼统了")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("03. HTML5新特性")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("04. 常见的浏览器兼容问题")])]),t._v(" "),v("p",[t._v("Vue")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("01. Vuex")]),t._v(" "),v("p",[t._v("状态管理")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("02. 双向绑定的原理")]),t._v(" "),v("p",[t._v("观察者模式")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("03. 组件间传递数据")]),t._v(" "),v("p",[t._v("props、$emit自定义事件、eventBUS、vuex、$parent、$root、$children、$attrs、$listeners、ref、provide、inject、\n插槽")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("04. Vue项目优化")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("05. MVVM和MVC")]),t._v(" "),v("p",[t._v("m、v、vm")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("06. Computed和Watch")]),t._v(" "),v("p",[t._v("计算属性，")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("07. V-for 和 v-if同时使用的问题")]),t._v(" "),v("p",[t._v("优先级v-for 大于 v-if，先循环再判断，浪费性能；外面嵌套template，v-if判断之后再循环")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("8. 什么时候使用$.nextTick()")]),t._v(" "),v("p",[t._v("第三方插件，需要操作dom")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("09. 路由的原理")]),t._v(" "),v("p",[t._v("H5api，hashchange，pushstate，replacestate")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("10. 常用的事件修饰符")]),t._v(" "),v("p",[t._v("lazy，stop，prevent，once，enter，字符编号")])]),t._v(" "),v("p",[t._v("浏览器原理相关")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("01. 常用HTTP请求")]),t._v(" "),v("p",[t._v("get、post、put、patch、delete")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("02. Get和Post的区别")]),t._v(" "),v("p",[t._v("获取发送")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("03. 跨域的解决办法")]),t._v(" "),v("p",[t._v("jsonp")]),t._v(" "),v("p",[t._v("cors=>access-control-allow-origin")]),t._v(" "),v("p",[t._v("正向代理，反向代理")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("04. URL输出到页面的全过程")]),t._v(" "),v("p",[t._v("跳转=>缓存=>DNS=>TCP连接=>Request=>Response")]),t._v(" "),v("p",[t._v("浏览器的渲染")]),t._v(" "),v("p",[t._v("网络线程（白名单）=>UI线程（ipc）=>渲染器进程的主线程=>DOM=>STYLE=>layout布局（坐标位置区域）=>paint（绘制顺序表）=>layer=>合成器线程（栅格每个图层，切小图），Frames=>栅格线程，栅格每个图块，生成给合成器")]),t._v(" "),v("p",[t._v("frames通过ipc到浏览器，再通过GPU渲染")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("05. 常用的请求状态码")]),t._v(" "),v("p",[t._v("1xx：相关信息")]),t._v(" "),v("p",[t._v("2xx：表示成功")]),t._v(" "),v("p",[t._v("3xx：重定向")]),t._v(" "),v("p",[t._v("4xx：客户端错误")]),t._v(" "),v("p",[t._v("5xx：服务端错误，502网关超时")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("01. 文字在盒子水平垂直居中")]),t._v(" "),v("p",[t._v("text-align: center;")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("02. 文字在屏幕水平垂直居中")]),t._v(" "),v("p",[t._v("margin: 0 auto;")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("03. 在电脑，手机，pad端水平垂直居中")]),t._v(" "),v("p",[t._v("父相子绝，left50%，transform，translate-50%")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("04. 访问网站白屏，可能的原因，如果是网络原因怎么办")]),t._v(" "),v("p",[t._v("网络延迟，JS加载延迟")]),t._v(" "),v("p",[t._v("服务端渲染")]),t._v(" "),v("p",[t._v("CDN")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("05. 十字路口有车，实时显示车的数量")]),t._v(" "),v("p",[t._v("？？？栈数据结构?")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("06. 手机访问一张10g的图片，怎么优化")]),t._v(" "),v("p",[t._v("webp格式，再压缩")]),t._v(" "),v("p",[t._v("切片")]),t._v(" "),v("p",[t._v("帧显示")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("07. Websocket有用过吗")]),t._v(" "),v("p",[t._v("是一种网络传输协议，可在单个 TCP 链接上进行的全双工通信, 位于 OSI 模型的应用层")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("08. Webpack用过吗")]),t._v(" "),v("p",[t._v("webpack打包")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("09. 地图有了解过吗")]),t._v(" "),v("p",[t._v("有，argis runtime for js")])])])}),[],!1,null,null,null);s.default=i.exports}}]);