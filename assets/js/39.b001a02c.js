(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{386:function(t,s,a){"use strict";a.r(s);var n=a(25),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http-协议原理-实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-协议原理-实践"}},[t._v("#")]),t._v(" HTTP 协议原理+实践")]),t._v(" "),a("h2",{attrs:{id:"学习介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习介绍"}},[t._v("#")]),t._v(" 学习介绍")]),t._v(" "),a("p",[t._v("学习 http 的重要性，学习的必要性")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("web 开发不理解，但是很重要，也能提高自身价值")])]),t._v(" "),a("li",[a("p",[t._v("例子: 输入 url 打开网页 、ajax 获取数据、 img 标签加载图片")])]),t._v(" "),a("li",[a("p",[t._v("cache-control")])]),t._v(" "),a("li",[a("p",[t._v("缓存验证（提高性能）")])]),t._v(" "),a("li",[a("p",[t._v("更多有意义的头")])]),t._v(" "),a("li",[a("p",[t._v("TCP")])]),t._v(" "),a("li",[a("p",[t._v("跳转=>缓存=>DNS=>TCP 连接=>Request=>Response")])])]),t._v(" "),a("h2",{attrs:{id:"http-协议基础及发展历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-协议基础及发展历史"}},[t._v("#")]),t._v(" HTTP 协议基础及发展历史")]),t._v(" "),a("h3",{attrs:{id:"_5-层网络模型介绍-参考-osi-七层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-层网络模型介绍-参考-osi-七层"}},[t._v("#")]),t._v(" 5 层网络模型介绍（参考 osi 七层）")]),t._v(" "),a("p",[t._v("经典五层【物链网传（会表）应】")]),t._v(" "),a("p",[t._v("物理层：定义物理设备如何传输数据（硬件，光缆，网线等）")]),t._v(" "),a("p",[t._v("数据链路层：在通信实体之间建立数据链路连接（0, 1）")]),t._v(" "),a("p",[t._v("网络层：为数据在结点之间传输创建逻辑链路")]),t._v(" "),a("p",[t._v("传输层：")]),t._v(" "),a("ul",[a("li",[t._v("TCP/IP、UDP")]),t._v(" "),a("li",[t._v("为用户提供端到端的服务")]),t._v(" "),a("li",[t._v("向高层屏蔽了下层数据通信的细节")])]),t._v(" "),a("p",[t._v("应用层：")]),t._v(" "),a("ul",[a("li",[t._v("为应用软件提供了很多服务")]),t._v(" "),a("li",[t._v("构建于 TCP 协议之上")]),t._v(" "),a("li",[t._v("屏蔽了网络传输相关细节")])]),t._v(" "),a("h3",{attrs:{id:"http-协议发展史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-协议发展史"}},[t._v("#")]),t._v(" HTTP 协议发展史")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("HTTP0.9: 只有一个 get 命令，没有 HEARER 等描述数据的信息，单次连接，服务器发送完毕，就关闭 TCP 连接")])]),t._v(" "),a("li",[a("p",[t._v("HTPP1.0: 增加很多命令，增加 status code 和 header，多字符集的支持、多部分发送、权限、缓存等")])]),t._v(" "),a("li",[a("p",[t._v("HTPP1.1: 持久连接，pipeline（同一个连接，发送多个请求，但是服务端是按照顺序处理连接，串行与并行差异），增加 host（同一个物理服务器跑不同的软件）和其他一些命令")])]),t._v(" "),a("li",[a("p",[t._v("HTTP2: 所以数据以二进制（帧）传输，同一个连接里面发送多个请求，不在需要按照顺序来处理，头信息压缩以及推送等提高效率的功能。（解决 HTTP1.1 效率低的问题，服务端可以主动发起数据传输，在请求 html 的同时，服务端推送 css，js 到客服端，并行，提高效率）")])])]),t._v(" "),a("h3",{attrs:{id:"http-的三次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-的三次握手"}},[t._v("#")]),t._v(" HTTP 的三次握手")]),t._v(" "),a("p",[t._v("客服端发送：(标志位)SYN=1，Seq =X")]),t._v(" "),a("p",[t._v("服务端返回：SYN = 1, ACK = X+1, Seq = Y")]),t._v(" "),a("p",[t._v("客户端发送：ACK = Y+1, Seq=Z")]),t._v(" "),a("p",[t._v("由于网络的延迟或者丢失，需要第三次连接来确保连接成功，同时避免服务端开启无用端口资源")]),t._v(" "),a("h3",{attrs:{id:"uri、url-和-urn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uri、url-和-urn"}},[t._v("#")]),t._v(" URI、URL 和 URN")]),t._v(" "),a("p",[t._v("URI=URL+URN")]),t._v(" "),a("ul",[a("li",[t._v("统一资源标志符，标识互联网上的信息资源")])]),t._v(" "),a("p",[t._v("URL")]),t._v(" "),a("ul",[a("li",[t._v("统一资源定位器")]),t._v(" "),a("li",[t._v("http://user:pass@host.com:80/path?query=string#hash")])]),t._v(" "),a("p",[t._v("URN")]),t._v(" "),a("ul",[a("li",[t._v("永久统一资源定位符，在资源移动之后还能被找到，现没有成熟的方案")])]),t._v(" "),a("h3",{attrs:{id:"http-报文格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-报文格式"}},[t._v("#")]),t._v(" HTTP 报文格式")]),t._v(" "),a("p",[t._v("定义只是规定、规范，没有强约束，但是具体的操作由操作者选择")]),t._v(" "),a("ul",[a("li",[t._v("请求报文：")])]),t._v(" "),a("p",[t._v("行（请求方法，url，协议版本）")]),t._v(" "),a("p",[t._v("头（传输数据的内容，想要接受数据的内容，格式）")]),t._v(" "),a("ul",[a("li",[t._v("响应报文：")])]),t._v(" "),a("p",[t._v("行（请求方法，code，明文的方式表达 code 的含义）")]),t._v(" "),a("p",[t._v("头 （传输数据的内容，返回数据的内容，格式）")]),t._v(" "),a("p",[t._v("空行")]),t._v(" "),a("p",[t._v("体（返回内容）")]),t._v(" "),a("p",[t._v("===========")]),t._v(" "),a("p",[t._v("HTTP 方法：定义对于资源的操作")]),t._v(" "),a("p",[t._v("HTTP CODE：服务器对请求的处理结果")]),t._v(" "),a("p",[t._v("===========")]),t._v(" "),a("h3",{attrs:{id:"创建一个简单的-web-服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建一个简单的-web-服务"}},[t._v("#")]),t._v(" 创建一个简单的 Web 服务")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//node自带模块,我傻了，这个自动格式化，服了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhttp\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test.html"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/html"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"监听服务8888"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"http-各种特性总览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-各种特性总览"}},[t._v("#")]),t._v(" HTTP 各种特性总览")]),t._v(" "),a("h3",{attrs:{id:"http-客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-客户端"}},[t._v("#")]),t._v(" HTTP 客户端")]),t._v(" "),a("p",[t._v("浏览器、curl 等等发送 http-content 的工具，不要单纯认为 HTTP 客户端只是浏览器，curl 是 git bash 自带的。")]),t._v(" "),a("h3",{attrs:{id:"cors-跨域请求的限制与解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors-跨域请求的限制与解决"}},[t._v("#")]),t._v(" CORS 跨域请求的限制与解决")]),t._v(" "),a("p",[t._v("1.jsonP")]),t._v(" "),a("p",[t._v("原理：浏览器允许 link、img、script 标签在标签上写（src，href）路径加载内容，和 CDN 引入一个意思")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Access-Control-Allow-Origin")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Origin"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("不管有没有这个返回头，浏览器都是会发送请求，浏览器不知道服务器是否接受跨域，内容也是返回回来了，只不过浏览器在解析内容时没有发现这个是不允许的时候，就会自己忽略，好像是 1995 年网景公司引入的同源策略。")]),t._v(" "),a("p",[t._v("设置了*，表示 任何服务都能访问")]),t._v(" "),a("p",[t._v("可以设置某一个特定的域名（浏览器是不认识映射关系的，比如 127.0.0.1 与 localhost），代码逻辑判断多个域名是否允许跨域")]),t._v(" "),a("h3",{attrs:{id:"cors-跨域限制与预请求验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors-跨域限制与预请求验证"}},[t._v("#")]),t._v(" CORS 跨域限制与预请求验证")]),t._v(" "),a("p",[t._v("CORS 预请求")]),t._v(" "),a("p",[t._v("允许方法：只允许 GET\\HEAD\\POST")]),t._v(" "),a("p",[t._v("允许 content-type： text/plain multipart/from-data application/x-www-form-urlencoded")]),t._v(" "),a("p",[t._v("其他限制：请求头限制")]),t._v(" "),a("p",[t._v("什么是预请求？")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Origin"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Headers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"自定义的请求头"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("浏览器通过 option 获取请求，允许接下来的请求操作")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Origin"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Headers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"自定义的请求头"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Max-Age"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("上面的请求，1000 秒的时间范围内，不需要再次发送预请求")]),t._v(" "),a("h3",{attrs:{id:"缓存-cahe-control-的含义和使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存-cahe-control-的含义和使用"}},[t._v("#")]),t._v(" 缓存 Cahe-Control 的含义和使用")]),t._v(" "),a("p",[t._v("可缓存性：")]),t._v(" "),a("ul",[a("li",[t._v("public：代表，返回的时候，任何代理，浏览器都可以执行缓存操作")]),t._v(" "),a("li",[t._v("private: 代表，发起请求的浏览器才可以缓存")]),t._v(" "),a("li",[t._v("no-cache: 使用缓存前先验证")])]),t._v(" "),a("p",[t._v("到期：")]),t._v(" "),a("ul",[a("li",[t._v("max-age = <seconds>")]),t._v(" "),a("li",[t._v("s-maxage = <seconds> 专门为代理服务器设置")]),t._v(" "),a("li",[t._v("max-stale = <seconds>发起请求带的头，只要在这个时间内，可以允许读取过期缓存")])]),t._v(" "),a("p",[t._v("重新验证：")]),t._v(" "),a("ul",[a("li",[t._v("must-revalidate 浏览器过期的时候，必须重新获取")]),t._v(" "),a("li",[t._v("proxy-revalidate 代理服务器过期的时候，必须重新获取")])]),t._v(" "),a("p",[t._v("其他：")]),t._v(" "),a("ul",[a("li",[t._v("no-store 彻底的，永远都要获取新的缓存")]),t._v(" "),a("li",[t._v("no-transform 代理服务器不允许改动")])]),t._v(" "),a("p",[t._v("这些都是规范，完全可以不按照规范去做, 但是会出问题\ncache-control 属于客户端缓存，只要 url 地址不变。\n打包资源的时候，hash 根据资源的内容变化，生成新的 hash 码，来刷新缓存。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/javascript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cache-Control"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"max-age=一年的时间,public"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"last-modified-和-etag-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-和-etag-的使用"}},[t._v("#")]),t._v(" Last-Modified 和 Etag 的使用")]),t._v(" "),a("ul",[a("li",[t._v("Last-Modified 上次修改时间")])]),t._v(" "),a("p",[t._v("if-modified-since/in-unmodified-since")]),t._v(" "),a("p",[t._v("对比上次修改时间来验证资源是否需要更新")]),t._v(" "),a("ul",[a("li",[t._v("Etag 数据签名")])]),t._v(" "),a("p",[t._v("IF_MATCH/if-non-match")]),t._v(" "),a("p",[t._v("对比资源的签名来判断是否使用缓存")]),t._v(" "),a("h3",{attrs:{id:"cookie-和-session"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session"}},[t._v("#")]),t._v(" cookie 和 session")]),t._v(" "),a("ul",[a("li",[t._v("cookie")])]),t._v(" "),a("p",[t._v("Set-Cookie 设置")]),t._v(" "),a("p",[t._v("下次请求自动带上，键值对，可以设置很多个")]),t._v(" "),a("p",[t._v("max-age 和 expires 设置过期时间、Secure 只在 https 的时候发送、HttpOnly 无法通过 document.cookie 访问，阻止 js 通过 cookie 访问，保证数据安全")]),t._v(" "),a("p",[t._v("domain 可以设置主域名下，子域名都访问时都带上 cookie")]),t._v(" "),a("p",[t._v("使用 cookie 来保存 session，把用户登录的 key 设置到 cookie 里面。拿着 sessionID 对着服务的数据查找用户的数据（不会这么做了，1 服务器压力大，2 服务器需要大量存储用户数据，3 不安全，用户的 id 也是用户数据，存储在客服端不太好")]),t._v(" "),a("p",[t._v("session 只要我没保证能够定位到用户，就算是 session 的实现方法")]),t._v(" "),a("h3",{attrs:{id:"http-长连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-长连接"}},[t._v("#")]),t._v(" HTTP 长连接")]),t._v(" "),a("p",[t._v("1.1 里面的")]),t._v(" "),a("p",[t._v("谷歌浏览器一次性并发 6 个")]),t._v(" "),a("p",[t._v("connection：keeplive/close")]),t._v(" "),a("p",[t._v("http 请求是在 tcp 连接上面进行发送的，一个 tcp 连接可以发送多 http 请求，1.1 里面有先后顺序，所以要并发发送请求。")]),t._v(" "),a("h3",{attrs:{id:"数据协商"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据协商"}},[t._v("#")]),t._v(" 数据协商")]),t._v(" "),a("p",[t._v("客户端协商")]),t._v(" "),a("p",[t._v("Accept 指定我想要的数据类型")]),t._v(" "),a("p",[t._v("Accept-Ecoding 代表数据以什么编码方式来进行传输，数据压缩")]),t._v(" "),a("p",[t._v("Accept-Language")]),t._v(" "),a("p",[t._v("User-Agent 根据这个返回是浏览器页面，还是移动端的页面，适配不同浏览器")]),t._v(" "),a("p",[t._v("服务端协商")]),t._v(" "),a("p",[t._v("Cntent-Type 返回数据的数据格式")]),t._v(" "),a("p",[t._v("Cntent-Ecoding")]),t._v(" "),a("p",[t._v("Cntent-Language")]),t._v(" "),a("h3",{attrs:{id:"redirect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redirect"}},[t._v("#")]),t._v(" Redirect")]),t._v(" "),a("p",[t._v("请求时，发现资源不在了")]),t._v(" "),a("p",[t._v("301 永久重定向，就不用在问服务器了，直接跳转，从缓存里面读取，就算服务器改了地址，如果客户端自己不清缓存，那就完蛋，这个应该不常用。")]),t._v(" "),a("p",[t._v("302 临时重定向，还是要问一下服务器")]),t._v(" "),a("h3",{attrs:{id:"csp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csp"}},[t._v("#")]),t._v(" CSP")]),t._v(" "),a("p",[t._v("Content-Security-Policy(内容安全策略）")]),t._v(" "),a("p",[t._v("限制资源的获取")]),t._v(" "),a("p",[t._v("default-src 全局限制、指定资源类型来限制")]),t._v(" "),a("p",[t._v("报告资源获取越权")]),t._v(" "),a("h2",{attrs:{id:"nginx-代理以及面向未来的-http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-代理以及面向未来的-http"}},[t._v("#")]),t._v(" Nginx 代理以及面向未来的 HTTP")]),t._v(" "),a("h3",{attrs:{id:"nginx-的安装和基础代理配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-的安装和基础代理配置"}},[t._v("#")]),t._v(" Nginx 的安装和基础代理配置")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name 地址；\n    location "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        proxy_pass http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//127.0.0.1:8888;")]),t._v("\n            proxy_set_header "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HOST")]),t._v(" $host "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改代理的http头")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"nginx-代理配置和代理缓存的用处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-代理配置和代理缓存的用处"}},[t._v("#")]),t._v(" Nginx 代理配置和代理缓存的用处")]),t._v(" "),a("p",[t._v("proxy_cache_path 地址 level=1:2 keyz_zone=名字:10m")]),t._v(" "),a("p",[t._v("proxy_cache 名字")]),t._v(" "),a("p",[t._v("速度快，在代理设置，如果代理缓存设置过了，可以读代理缓存")]),t._v(" "),a("p",[t._v("s-maxage 代理缓存的时间")]),t._v(" "),a("p",[t._v("private 只有浏览器才能缓存")]),t._v(" "),a("p",[t._v("no-store，所有的都不能缓存")]),t._v(" "),a("p",[t._v("Vary 用来只能 http 的头的值相同时，再使用缓存，这个头会存在服务端那边")]),t._v(" "),a("h3",{attrs:{id:"https-解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https-解析"}},[t._v("#")]),t._v(" HTTPS 解析")]),t._v(" "),a("p",[t._v("HTTP 不安全，明文传输")]),t._v(" "),a("p",[t._v("HTTPS 加密 私钥，公钥")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/计算机/网络协议/https.png")}}),t._v(" "),a("h3",{attrs:{id:"使用-nginx-部署-https-服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-nginx-部署-https-服务"}},[t._v("#")]),t._v(" 使用 Nginx 部署 HTTPS 服务")]),t._v(" "),a("p",[t._v("需要生成公钥，私钥")]),t._v(" "),a("p",[t._v("默认端口 443")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("ssl on\nssl_certificate_key\nssl_certificate\n")])])]),a("p",[t._v("浏览器需要安全证书，来证明 url 是安全的")]),t._v(" "),a("h3",{attrs:{id:"http2-的优势和配置-http2-的简单使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http2-的优势和配置-http2-的简单使用"}},[t._v("#")]),t._v(" HTTP2 的优势和配置 HTTP2 的简单使用")]),t._v(" "),a("p",[t._v("HTTPS 的优势")]),t._v(" "),a("p",[t._v("信道复用、分帧传输、Server Push")]),t._v(" "),a("p",[t._v("Link; 这个请求，服务端可以推送内容（不安全的证书，不接受推送）")]),t._v(" "),a("p",[t._v("Nginx 可以兼容 1.1 和 2，代理服务器可以转化协议给服务器")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("HTTP 原理=》tcp 连接上面传输（三次，四次），长连接，性能提升")]),t._v(" "),a("p",[t._v("HTTP 技术点=》缓存，验证缓存，csp，cors")]),t._v(" "),a("p",[t._v("Nginx 实践、面向未来的 HTTP=》Nginx 好处，HTTP2 的安全，性能提升")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/计算机/网络协议/tcp.png")}}),t._v(" "),a("p",[t._v("后记：知道就行了，感觉要深入得实操。")])])}),[],!1,null,null,null);s.default=r.exports}}]);